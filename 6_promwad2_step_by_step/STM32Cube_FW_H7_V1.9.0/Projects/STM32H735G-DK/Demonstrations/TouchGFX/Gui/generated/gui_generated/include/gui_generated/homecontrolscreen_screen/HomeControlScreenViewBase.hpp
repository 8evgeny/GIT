/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HOMECONTROLSCREENVIEWBASE_HPP
#define HOMECONTROLSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/homecontrolscreen_screen/HomeControlScreenPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/HomeUIWheelElement.hpp>

#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/RoomInfoWheelElements.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/DeviceInfoWheelElements.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/HomeUISplashContainer.hpp>
#include <gui/containers/FpsMcuLoad.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
class HomeControlScreenViewBase : public touchgfx::View<HomeControlScreenPresenter>
{
public:
    HomeControlScreenViewBase();
    virtual ~HomeControlScreenViewBase() {}
    virtual void setupScreen();

    virtual void scrollListKitchenDevicesUpdateItem(DeviceInfoWheelElements& item, int16_t itemIndex)
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void scrollListBathroomDevicesUpdateItem(DeviceInfoWheelElements& item, int16_t itemIndex)
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void scrollWheelRoomSelectorUpdateItem(HomeUIWheelElement& item, int16_t itemIndex)
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void scrollWheelRoomSelectorUpdateCenterItem(HomeUIWheelElement& item, int16_t itemIndex)
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void scrollWheelRoomInfoUpdateItem(RoomInfoWheelElements& item, int16_t itemIndex)
    {
        // Override and implement this function in HomeControlScreen
    }

    /*
     * Virtual Action Handlers
     */
    virtual void goToPrevRoom()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void radioDevicesSelected()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void radioTemperatureSelected()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void roomInfoLeftClicked()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void roomInfoRightClicked()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void backButtonPressed()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void buttonMuiscRecipesPressed()
    {
        // Override and implement this function in HomeControlScreen
    }

    virtual void buttonPersPressed()
    {
        // Override and implement this function in HomeControlScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::ScrollWheelWithSelectionStyle scrollWheelRoomSelector;
    touchgfx::DrawableListItems<HomeUIWheelElement, 6> scrollWheelRoomSelectorListItems;
    touchgfx::DrawableListItems<HomeUIWheelElement, 2> scrollWheelRoomSelectorSelectedListItems;

    touchgfx::ScrollWheel scrollWheelRoomInfo;
    touchgfx::DrawableListItems<RoomInfoWheelElements, 2> scrollWheelRoomInfoListItems;

    touchgfx::Container containerDevicesWheel;
    touchgfx::MoveAnimator< touchgfx::ScrollList > scrollListKitchenDevices;
    touchgfx::DrawableListItems<DeviceInfoWheelElements, 4> scrollListKitchenDevicesListItems;

    touchgfx::MoveAnimator< touchgfx::ScrollList > scrollListBathroomDevices;
    touchgfx::DrawableListItems<DeviceInfoWheelElements, 4> scrollListBathroomDevicesListItems;

    touchgfx::FadeAnimator< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > > switchRoomLeft;
    touchgfx::FadeAnimator< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > > switchRoomRight;
    touchgfx::FadeAnimator< touchgfx::RadioButton > radioButtonTemperature;
    touchgfx::FadeAnimator< touchgfx::RadioButton > radioButtonDevices;
    touchgfx::FadeAnimator< touchgfx::Button > buttonPersonalize;
    touchgfx::FadeAnimator< touchgfx::Button > buttonMusicRecipes;
    touchgfx::FadeAnimator< touchgfx::Image > imageTopGradient;
    touchgfx::FadeAnimator< touchgfx::Button > buttonPreviousRoom;
    touchgfx::FadeAnimator< touchgfx::Button > buttonBack;
    touchgfx::FadeAnimator< touchgfx::TextArea > textAreaHomeUIHeadline;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > textAreaDate;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > textAreaTime;
    touchgfx::FadeAnimator< touchgfx::Image > glowTemp;
    touchgfx::FadeAnimator< touchgfx::Image > glowDevices;
    touchgfx::FadeAnimator< touchgfx::Image > glowRecipe;
    touchgfx::ClickListener< HomeUISplashContainer > homeUISplashContainer;
    FpsMcuLoad mcuLoad;
    touchgfx::RadioButtonGroup<2> radioButtonGroup;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREADATE_SIZE = 14;
    touchgfx::Unicode::UnicodeChar textAreaDateBuffer[TEXTAREADATE_SIZE];
    static const uint16_t TEXTAREATIME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaTimeBuffer[TEXTAREATIME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<HomeControlScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<HomeControlScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<HomeControlScreenViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;
    touchgfx::Callback<HomeControlScreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // HOMECONTROLSCREENVIEWBASE_HPP
