/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KITCHENSCREENVIEWBASE_HPP
#define KITCHENSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/kitchenscreen_screen/KitchenScreenPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/FpsMcuLoad.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class KitchenScreenViewBase : public touchgfx::View<KitchenScreenPresenter>
{
public:
    KitchenScreenViewBase();
    virtual ~KitchenScreenViewBase() {}
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void startGlowAnimaton()
    {
        // Override and implement this function in KitchenScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ClickListener< touchgfx::Image > background;
    touchgfx::Button buttoHallway;
    touchgfx::Image imageLight;
    touchgfx::FadeAnimator< touchgfx::Button > buttonExtractorHood;
    touchgfx::FadeAnimator< touchgfx::Button > buttonThermo;
    touchgfx::FadeAnimator< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > > buttonOven;
    touchgfx::Image imageCookpot;
    touchgfx::Image imageOvenOn;
    touchgfx::Image imageHoodUI;
    touchgfx::Image imageHomeUI;
    touchgfx::Image imageOvenUI;
    FpsMcuLoad mcuLoad;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<KitchenScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<KitchenScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // KITCHENSCREENVIEWBASE_HPP
