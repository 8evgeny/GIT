/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WASHERCONTAINERBASE_HPP
#define WASHERCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/WasherWheelItem.hpp>
#include <gui/containers/WasherWheelCenterItem.hpp>

#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
class WasherContainerBase : public touchgfx::Container
{
public:
    WasherContainerBase();
    virtual ~WasherContainerBase() {}
    virtual void initialize();

    virtual void washerWheelUpdateItem(WasherWheelItem& item, int16_t itemIndex)
    {
        // Override and implement this function in WasherContainer
    }

    virtual void washerWheelUpdateCenterItem(WasherWheelCenterItem& item, int16_t itemIndex)
    {
        // Override and implement this function in WasherContainer
    }

    /*
     * Virtual Action Handlers
     */
    virtual void rightButtonClicked()
    {
        // Override and implement this function in WasherContainer
    }

    virtual void leftButtonClicked()
    {
        // Override and implement this function in WasherContainer
    }

    virtual void buttonRunClicked()
    {
        // Override and implement this function in WasherContainer
    }

    virtual void buttonPausedClicked()
    {
        // Override and implement this function in WasherContainer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::Image imageGreyCenter;
    touchgfx::Image bottombar;
    touchgfx::Image topbar;
    touchgfx::ScrollWheelWithSelectionStyle washerWheel;
    touchgfx::DrawableListItems<WasherWheelItem, 5> washerWheelListItems;
    touchgfx::DrawableListItems<WasherWheelCenterItem, 2> washerWheelSelectedListItems;

    touchgfx::Image imageWhiteCenter;
    touchgfx::Image leftShade;
    touchgfx::Image rightShade;
    touchgfx::MoveAnimator< touchgfx::Button > leftButton;
    touchgfx::MoveAnimator< touchgfx::Button > rightButton;
    touchgfx::FadeAnimator< touchgfx::Button > buttonStart;
    touchgfx::AnimatedImage centerAnimation;
    touchgfx::FadeAnimator< touchgfx::Image > imageOption1;
    touchgfx::FadeAnimator< touchgfx::Image > imageOption2;
    touchgfx::FadeAnimator< touchgfx::Image > imageOption3;
    touchgfx::FadeAnimator< touchgfx::Image > imageRPM;
    touchgfx::FadeAnimator< touchgfx::Image > imageHeat;
    touchgfx::FadeAnimator< touchgfx::Image > imageLevel;
    touchgfx::MoveAnimator< touchgfx::Image > icon1;
    touchgfx::MoveAnimator< touchgfx::Image > icon2;
    touchgfx::MoveAnimator< touchgfx::Image > icon3;
    touchgfx::MoveAnimator< touchgfx::Image > icon4;
    touchgfx::MoveAnimator< touchgfx::Image > icon5;
    touchgfx::MoveAnimator< touchgfx::Image > icon6;
    touchgfx::MoveAnimator< touchgfx::Image > leftReplacementImage;
    touchgfx::MoveAnimator< touchgfx::Image > rightReplacementImage;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > textAreaProgramName;
    touchgfx::FadeAnimator< touchgfx::TextArea > textAreaDash;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > textAreaProgramLength;
    touchgfx::FadeAnimator< touchgfx::Button > buttonRun;
    touchgfx::FadeAnimator< touchgfx::Button > buttonPause;
    touchgfx::FadeAnimator< touchgfx::AnimatedImage > washAnimation;
    touchgfx::Image prewashIcon;
    touchgfx::Image washingIcon;
    touchgfx::Image rinsingIcon;
    touchgfx::Image spinCycleIcon;
    touchgfx::FadeAnimator< touchgfx::Circle > progressBar;
    touchgfx::PainterRGB888 progressBarPainter;
    touchgfx::Image washDoneBackground;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAPROGRAMNAME_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaProgramNameBuffer[TEXTAREAPROGRAMNAME_SIZE];
    static const uint16_t TEXTAREAPROGRAMLENGTH_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textAreaProgramLengthBuffer[TEXTAREAPROGRAMLENGTH_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<WasherContainerBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<WasherContainerBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // WASHERCONTAINERBASE_HPP
