#############################################################################
# Makefile for building: MCU frmware loader
# Generated by Marusenkov S.A. on: Mon Aug 22 16:05:00 2016
# Project:  none
# Template: firmware
# Command:  none
#############################################################################

####### MCU serie and kernel type
MCU  = 1986be1x
MCPU = cortex-m1

####### Compiler, tools and options
CC       = arm-none-eabi-gcc
CCASM    = arm-none-eabi-gcc
LINK     = arm-none-eabi-gcc
OBJCOPY  = arm-none-eabi-objcopy
OBJDUMP  = arm-none-eabi-objdump
FMPROG   = /usr/bin/mcufmloader
INCPATH  = -I.
CFLAGS   = -mcpu=$(MCPU) -mthumb -O1 \
	-ffunction-sections -fdata-sections \
	-Wall -Wextra -Wshadow -Wredundant-decls -Wno-unused-parameter \
	-Wno-missing-field-initializers -Wno-main -pipe
LFLAGS   = -T src/fmloader-$(MCU).ld --specs=nosys.specs \
	-Wl,--gc-sections -ffreestanding -nostartfiles \
	-Wl,-Map=$(TARGETMAP)
DEL_FILE = rm -f
MOVE     = mv -f
MKDIR    = mkdir -p

####### Output directory
OUTDIR   = ./output
BINDIR   = $(OUTDIR)
LSTDIR   = $(OUTDIR)
OBJDIR   = $(OUTDIR)

####### Files
SOURCESASM = src/startup_$(MCU).S
SOURCES    = src/fmloader-$(MCU)-main.c
OBJECTSASM = $(SOURCESASM:.S=.o)
OBJECTS    = $(SOURCES:.c=.o)

TARGET     = fmloader-$(MCU)-gcc
TARGETELF  = $(BINDIR)/$(TARGET).elf
TARGETHEX  = $(BINDIR)/$(TARGET).hex
TARGETBIN  = $(BINDIR)/$(TARGET).bin
TARGETMAP  = $(BINDIR)/$(TARGET).map
TARGETLST  = $(LSTDIR)/$(TARGET).lst

TMPFILE = $(OBJDIR)/objfiles.tmp
OBJFILE  = $(OBJDIR)/`basename $@`
OBJFILES = `cat $(TMPFILE)`

first: all

####### Implicit rules
.SUFFIXES: .c .S .o .lst

.c.o:
	$(CC) $(CFLAGS) $(INCPATH) -c $< -o $(OBJFILE)
	echo -n "$(OBJFILE) " >> $(TMPFILE)

.S.o:
	$(CCASM) $(CFLAGS) $(INCPATH) -c $< -o $(OBJFILE)
	echo -n "$(OBJFILE) " >> $(TMPFILE)

.o.lst:
	$(OBJDUMP) -D $(OBJDIR)/`basename $<` > $(LSTDIR)/`basename $@`

####### Build rules
all: prep $(SOURCESASM) $(SOURCES) $(TARGETELF)

prep:
	$(DEL_FILE) $(TMPFILE)

$(TARGETELF): $(OBJECTSASM) $(OBJECTS)
	$(LINK) $(CFLAGS) $(LFLAGS) $(OBJFILES) -o $@
	$(OBJCOPY) $(TARGETELF) $(TARGETBIN) -O binary
	$(OBJCOPY) $(TARGETELF) $(TARGETHEX) -O ihex
	$(OBJDUMP) -D $(TARGETELF) > $(TARGETLST)
	$(DEL_FILE) $(TMPFILE)

####### Compile

####### Clean
clean:
	$(DEL_FILE) $(OBJDIR)/*.o $(LSTDIR)/*.lst $(TMPFILE)

distclean: clean
	$(DEL_FILE) $(BINDIR)/$(TARGET)*

####### Convert loader binary file to C-array.
####### Update "#define xxxx_start ..." after
cfile:
	$(FMPROG) -mcu $(MCU) -ldfmt binary -ldconv $(TARGETBIN)
	$(MOVE) $(TARGETBIN).c ../../src
