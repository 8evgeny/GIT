/*
 * ADC.h
 *
 *  Created on: 30 сент. 2021 г.
 *      Author: User
 * Делаем так:
 * Конструктор производит начальную инициализацию и калибровку.
 * Ему передаются ADC и имя порта. Но это излишне, т.к. АЦП у этой серии только один и задействован порт"А"
 * Поэтому этого пока делать не буду.
 * Инициализация будет состоять из подачи тактовой частоты и калибровки АЦП
 *
 * Преобразование с определённого вывода будет обращением к функции, аргументом которой будет номер вывода.
 * Функция преобразования (блокирующая):
 *   Проинициализирует порт;
 *   Запустит АЦП;
 *   Дождётся окончания;
 *   Вернёт настройки порта;
 *   Возвратит результат
 */

#ifndef INC_ADC_H_
#define INC_ADC_H_

  //****************************************************************************** 
  //  Секция include: здесь подключаются заголовочные файлы используемых модулей 
  //****************************************************************************** 
#include <stdint.h> 
#include <STM32.h>

class IO_Analog
{
  public:
    IO_Analog(ADC_TypeDef *ADCx, GPIO_TypeDef *GPIO);                 // Оставим для других МК
//    IO_Analog();
    void Init(void);
    uint16_t  AnalogRead(uint16_t Channel);
    uint16_t    _InternalVCC;

  private:
    ADC_TypeDef *_ADCx;
    GPIO_TypeDef *_GPIOx;
    uint16_t    _ADC_Pin;
    uint8_t     _CalibrationFactor = 0;

  protected:

};

// Закрывающий #endif к блокировке повторного включения 

#endif /* INC_ADC_H_ */
